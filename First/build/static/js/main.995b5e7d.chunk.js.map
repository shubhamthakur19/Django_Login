{"version":3,"sources":["actions/auth.js","actions/types.js","actions/profile.js","components/Navbar.js","hocs/Layout.js","pages/Home.js","components/CSRFToken.js","pages/Register.js","pages/Login.js","pages/Dashboard.js","hocs/PrivateRoute.js","reducers/auth.js","reducers/profile.js","reducers/index.js","store.js","App.js","index.js"],"names":["checkAuthenticated","dispatch","a","config","headers","axios","get","process","venv","REACT_APP_API_URL","res","data","error","isAuthenticated","type","AUTHENTICATED_FAIL","payload","AUTHENTICATED_SUCCESS","login","username","password","Cookies","body","JSON","stringify","post","success","LOGIN_SUCCESS","load_user","LOGIN_FAIL","register","re_password","REGISTER_FAIL","REGISTER_SUCCESS","logout","LOGOUT_SUCCESS","LOGOUT_FAIL","LOAD_USER_PROFILE_SUCCESS","LOAD_USER_PROFILE_FAIL","connect","state","auth","authLinks","className","to","onClick","href","guestLinks","exact","id","children","useEffect","Navbar","home","CSRFToken","useState","csrftoken","setcsrftoken","fetchData","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","value","formData","setFormData","accountCreated","setAccountCreated","onChange","e","target","onSubmit","preventDefault","placeholder","required","minLength","first_name_global","profile","first_name","last_name_global","last_name","phone_global","phone","city_global","city","Component","component","rest","render","props","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","path","Home","Register","Login","Dashboard","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.995b5e7d.chunk.js","sourcesContent":["import Cookies from 'js-cookie';\r\nimport axios from 'axios';\r\nimport { load_user } from './profile';\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL\r\n} from './types'; \r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.venv.REACT_APP_API_URL}/app/authenticated`, config);\r\n\r\n        if (res.data.error || res.data.isAuthenticated === 'error') {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL,\r\n                payload: false\r\n            });\r\n        }\r\n        else if (res.data.isAuthenticated === 'success') {\r\n            dispatch({\r\n                type: AUTHENTICATED_SUCCESS,\r\n                payload: true\r\n            });\r\n        }\r\n        else {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL,\r\n                payload: false\r\n            });\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL,\r\n            payload: false\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = (username, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': Cookies.get('csrftoken')\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ username, password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/app/login`, body, config);\r\n\r\n        if (res.data.success) {\r\n            dispatch({\r\n                type: LOGIN_SUCCESS\r\n            });\r\n\r\n            dispatch(load_user());\r\n        } else {\r\n            dispatch({\r\n                type: LOGIN_FAIL\r\n            });\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const register = (username, password, re_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': Cookies.get('csrftoken')\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ username, password, re_password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/app/register`, body, config);\r\n\r\n        if (res.data.error) {\r\n            dispatch({\r\n                type: REGISTER_FAIL\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: REGISTER_SUCCESS\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': Cookies.get('csrftoken')\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        'withCredentials': true\r\n    });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/app/logout`, body, config);\r\n\r\n        if (res.data.success) {\r\n            dispatch({\r\n                type: LOGOUT_SUCCESS\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: LOGOUT_FAIL\r\n            });\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: LOGOUT_FAIL\r\n        });\r\n    }\r\n};","export const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL';\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\n\r\n// Profile Dispatch States\r\nexport const LOAD_USER_PROFILE_SUCCESS = 'LOAD_USER_PROFILE_SUCCESS';\r\nexport const LOAD_USER_PROFILE_FAIL = 'LOAD_USER_PROFILE_FAIL';\r\n","import Cookies from 'js-cookie';\r\nimport axios from 'axios';\r\nimport {\r\n    LOAD_USER_PROFILE_SUCCESS,\r\n    LOAD_USER_PROFILE_FAIL,\r\n} from './types';\r\n\r\nexport const load_user = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/profile/user`, config);\r\n\r\n        if (res.data.error) {\r\n            dispatch({\r\n                type: LOAD_USER_PROFILE_FAIL\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: LOAD_USER_PROFILE_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOAD_USER_PROFILE_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n","import React, { Fragment } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../actions/auth';\r\n\r\nconst navbar = ({ isAuthenticated, logout }) => {\r\n    const authLinks = (\r\n        <Fragment>\r\n            <li className='nav-item'>\r\n                <NavLink className='nav-link' to='/dashboard'>Dashboard</NavLink>\r\n            </li>\r\n            <li className='nav-item'>\r\n                <a className='nav-link' onClick={logout} href='#!'>Logout</a>\r\n            </li>\r\n        </Fragment>\r\n    );\r\n\r\n    const guestLinks = (\r\n        <Fragment>\r\n            <li className='nav-item'>\r\n                <NavLink className='nav-link' to='/login'>Login</NavLink>\r\n            </li>\r\n            <li className='nav-item'>\r\n                <NavLink className='nav-link' to='/register'>Register</NavLink>\r\n            </li>\r\n        </Fragment>\r\n    );\r\n\r\n    return (\r\n        <nav className='navbar navbar-expand-lg navbar-light bg-light'>\r\n            <div className='container-fluid'>\r\n                <Link className='navbar-brand' exact to='/'>App</Link>\r\n                <button \r\n                    className='navbar-toggler' \r\n                    type='button' \r\n                    data-bs-toggle='collapse' \r\n                    data-bs-target='#navbarNav' \r\n                    aria-controls='navbarNav' \r\n                    aria-expanded='false' \r\n                    aria-label='Toggle navigation'\r\n                >\r\n                    <span className='navbar-toggler-icon'></span>\r\n                </button>\r\n                <div className='collapse navbar-collapse' id='navbarNav'>\r\n                    <ul className='navbar-nav'>\r\n                        <li className='nav-item'>\r\n                            <NavLink className='nav-link' exact to='/'>Home</NavLink>\r\n                        </li>\r\n                        { isAuthenticated ? authLinks : guestLinks }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(navbar);","import React, { useEffect, Fragment } from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport { connect } from 'react-redux';\r\nimport { checkAuthenticated } from '../actions/auth';\r\nimport { load_user } from '../actions/profile';\r\n\r\nconst Layout = ({ children, checkAuthenticated, load_user }) => {\r\n    useEffect(() => {\r\n        checkAuthenticated();\r\n        load_user();\r\n    }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Navbar />\r\n            {children}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default connect(null, { checkAuthenticated, load_user })(Layout);\r\n\r\n    ","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst home = () => (\r\n    <div className='container'>\r\n        <div className='mt-5 p-5 bg-light'>\r\n            <h1 className='display-4'>Welcome</h1>\r\n            <p className='lead'>\r\n                This is a wonderful application with session authentication in React and Django.\r\n            </p>\r\n            <hr className='my-4' />\r\n            <p>Click the button below to log in.</p>\r\n            <Link className='btn btn-primary btn-lg' to='/login'>Login</Link>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default home;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CSRFToken = () => {\r\n    const [csrftoken, setcsrftoken] = useState('');\r\n\r\n    const getCookie = (name) => {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            let cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                let cookie = cookies[i].trim();\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                await axios.get(`${process.env.REACT_APP_API_URL}/app/csrf_cookie`);\r\n            } catch (err) {\r\n\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n        setcsrftoken(getCookie('csrftoken'));\r\n    }, []);\r\n\r\n    return (\r\n        <input type='hidden' name='csrfmiddlewaretoken' value={csrftoken} />\r\n    );\r\n};\r\n\r\nexport default CSRFToken;","import React, { useState } from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { register } from '../actions/auth';\r\nimport CSRFToken from '../components/CSRFToken';\r\n\r\nconst Register = ({ register, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        password: '',\r\n        re_password: ''\r\n    });\r\n    const [accountCreated, setAccountCreated] = useState(false);\r\n\r\n    const { username, password, re_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (password === re_password) {\r\n            register(username, password, re_password);\r\n            setAccountCreated(true);\r\n        }\r\n    };\r\n\r\n    if (isAuthenticated)\r\n        return <Redirect to='/dashboard' />;\r\n    else if (accountCreated)\r\n        return <Redirect to='/login' />;\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Register for an Account</h1>\r\n            <p>Create an account with our Session Auth application</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <CSRFToken />\r\n                <div className='form-group'>\r\n                    <label className='form-label'>Username: </label>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder='Username*'\r\n                        name='username'\r\n                        onChange={e => onChange(e)}\r\n                        value={username}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label className='form-label mt-3'>Password: </label>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Password*'\r\n                        name='password'\r\n                        onChange={e => onChange(e)}\r\n                        value={password}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label className='form-label mt-3'>Confirm Password: </label>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Confirm Password*'\r\n                        name='re_password'\r\n                        onChange={e => onChange(e)}\r\n                        value={re_password}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary mt-3' type='submit'>Register</button>\r\n            </form>\r\n            <p className='mt-3'>\r\n                Already have an Account? <Link to='/login'>Sign In</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { register })(Register);","import React, { useState } from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport CSRFToken from '../components/CSRFToken';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        password: ''\r\n    });\r\n\r\n    const { username, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        login(username, password);\r\n    };\r\n\r\n    if (isAuthenticated)\r\n        return <Redirect to='/dashboard' />;\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Sign In</h1>\r\n            <p>Sign into your Session Auth account</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <CSRFToken />\r\n                <div className='form-group'>\r\n                    <label className='form-label'>Username: </label>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder='Username*'\r\n                        name='username'\r\n                        onChange={e => onChange(e)}\r\n                        value={username}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label className='form-label mt-3'>Password: </label>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Password*'\r\n                        name='password'\r\n                        onChange={e => onChange(e)}\r\n                        value={password}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary mt-3' type='submit'>Login</button>\r\n            </form>\r\n            <p className='mt-3'>\r\n                Don't have an Account? <Link to='/register'>Sign Up</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst Dashboard = ({\r\n   \r\n    first_name_global,\r\n    last_name_global,\r\n    phone_global,\r\n    city_global\r\n}) => {\r\n    const [ setFormData] = useState({\r\n        first_name: '',\r\n        last_name: '',\r\n        phone: '',\r\n        city: ''\r\n    });\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        setFormData({\r\n            first_name: first_name_global,\r\n            last_name: last_name_global,\r\n            phone: phone_global,\r\n            city: city_global\r\n        });\r\n    }, [first_name_global]);\r\n\r\n    \r\n\r\n    \r\n\r\n    return (\r\n        <div className='container'>\r\n            <h1 className='mt-3'>Welcome to your User Dashboard</h1>\r\n          \r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    first_name_global: state.profile.first_name,\r\n    last_name_global: state.profile.last_name,\r\n    phone_global: state.profile.phone,\r\n    city_global: state.profile.city,\r\n});\r\n\r\nexport default connect(mapStateToProps, { \r\n   \r\n })(Dashboard);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst PrivateRoute = ({ component: Component, isAuthenticated, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props => isAuthenticated ? <Component {...props} /> : <Redirect to='/login' />}\r\n    />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(PrivateRoute);","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n  \r\n} from '../actions/types.js';\r\n\r\nconst initialState = {\r\n    isAuthenticated: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: payload\r\n            }\r\n        case REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n        case LOGOUT_SUCCESS:\r\n        case REGISTER_FAIL:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_FAIL:\r\n            return state\r\n        default:\r\n            return state\r\n    };\r\n};","import {\r\n    LOAD_USER_PROFILE_SUCCESS,\r\n    LOAD_USER_PROFILE_FAIL,\r\n} from '../actions/types.js';\r\n\r\nconst initialState = {\r\n    username: '',\r\n    first_name: '',\r\n    last_name: '',\r\n    phone: '',\r\n    city: ''\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case LOAD_USER_PROFILE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                username: payload.username,\r\n                first_name: payload.profile.first_name,\r\n                last_name: payload.profile.last_name,\r\n                phone: payload.profile.phone,\r\n                city: payload.profile.city,\r\n            }\r\n        case LOAD_USER_PROFILE_FAIL:\r\n            return {\r\n                ...state,\r\n                username: '',\r\n                first_name: '',\r\n                last_name: '',\r\n                phone: '',\r\n                city: '',\r\n            }\r\n        \r\n        default:\r\n            return state\r\n    };\r\n};","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\n\r\nexport default combineReducers({\r\n    auth,\r\n    profile\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport Layout from './hocs/Layout';\r\n\r\nimport Home from './pages/Home';\r\nimport Register from './pages/Register';\r\nimport Login from './pages/Login';\r\nimport Dashboard from './pages/Dashboard';\r\n\r\nimport PrivateRoute from './hocs/PrivateRoute';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nconst App = () => (\r\n    <Provider store={store}>\r\n        <Router>\r\n            <Layout>\r\n                <Route exact path='/' component={Home} />\r\n                <Route exact path='/register' component={Register} />\r\n                <Route exact path='/login' component={Login} />\r\n                <PrivateRoute exact path='/dashboard' component={Dashboard} />\r\n            </Layout>\r\n        </Router>\r\n    </Provider>\r\n);\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}